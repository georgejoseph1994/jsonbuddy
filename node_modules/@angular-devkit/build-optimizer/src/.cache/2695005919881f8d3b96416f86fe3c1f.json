{"remainingRequest":"A:\\Z Drive\\OnlineJSONeditor\\OnlineJSONeditor\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--8-1!A:\\Z Drive\\OnlineJSONeditor\\OnlineJSONeditor\\node_modules\\jsoneditor\\src\\js\\showTransformModal.js","dependencies":[{"path":"A:\\Z Drive\\OnlineJSONeditor\\OnlineJSONeditor\\node_modules\\jsoneditor\\src\\js\\showTransformModal.js","mtime":499162500000},{"path":"A:\\Z Drive\\OnlineJSONeditor\\OnlineJSONeditor\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1531646483117},{"path":"A:\\Z Drive\\OnlineJSONeditor\\OnlineJSONeditor\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1528256844000}],"contextDependencies":[],"result":["var jmespath = require('jmespath');\nvar picoModal = require('picomodal');\nvar Selectr = require('./assets/selectr/selectr');\nvar translate = require('./i18n').translate;\nvar debounce = require('./util').debounce;\n\nvar MAX_PREVIEW_LINES = 100;\n\n/**\n * Show advanced filter and transform modal using JMESPath\n * @param {Node} node the node to be transformed\n * @param {HTMLElement} container   The container where to center\n *                                  the modal and create an overlay\n */\nfunction showTransformModal (node, container) {\n  var value = node.getValue();\n\n  var content = '<label class=\"pico-modal-contents\">' +\n      '<div class=\"pico-modal-header\">' + translate('transform') + '</div>' +\n      '<p>' +\n      'Enter a <a href=\"http://jmespath.org\" target=\"_blank\">JMESPath</a> query to filter, sort, or transform the JSON data.<br/>' +\n      'To learn JMESPath, go to <a href=\"http://jmespath.org/tutorial.html\" target=\"_blank\">the interactive tutorial</a>.' +\n      '</p>' +\n      '<table>' +\n      '<tbody>' +\n      '<tr>' +\n      '  <th>' + translate('transformWizardLabel') + ' </th>' +\n      '  <td>' +\n      '  <div id=\"wizard\" class=\"jsoneditor-jmespath-wizard\">' +\n      '  <div>' +\n      '    <div class=\"jsoneditor-jmespath-wizard-label\">' + translate('transformWizardFilter') + '</div>' +\n      '    <div class=\"jsoneditor-jmespath-filter\">' +\n      '      <div class=\"jsoneditor-inline jsoneditor-jmespath-filter-field\" >' +\n      '        <select id=\"filterField\">' +\n      '        </select>' +\n      '      </div>' +\n      '      <div class=\"jsoneditor-inline jsoneditor-jmespath-filter-relation\" >' +\n      '        <select id=\"filterRelation\">' +\n      '          <option value=\"==\">==</option>' +\n      '          <option value=\"!=\">!=</option>' +\n      '          <option value=\"<\">&lt;</option>' +\n      '          <option value=\"<=\">&lt;=</option>' +\n      '          <option value=\">\">&gt;</option>' +\n      '          <option value=\">=\">&gt;=</option>' +\n      '        </select>' +\n      '      </div>' +\n      '      <div class=\"jsoneditor-inline jsoneditor-jmespath-filter-value\" >' +\n      '        <input placeholder=\"value...\" id=\"filterValue\" />' +\n      '      </div>' +\n      '    </div>' +\n      '  </div>' +\n      '  <div>' +\n      '    <div class=\"jsoneditor-jmespath-wizard-label\">' + translate('transformWizardSortBy') + '</div>' +\n      '    <div class=\"jsoneditor-jmespath-filter\">' +\n      '      <div class=\"jsoneditor-inline jsoneditor-jmespath-sort-field\">' +\n      '        <select id=\"sortField\">' +\n      '        </select>' +\n      '      </div>' +\n      '      <div class=\"jsoneditor-inline jsoneditor-jmespath-sort-order\" >' +\n      '        <select id=\"sortOrder\">' +\n      '          <option value=\"asc\">Ascending</option>' +\n      '          <option value=\"desc\">Descending</option>' +\n      '        </select>' +\n      '      </div>' +\n      '    </div>' +\n      '  </div>' +\n      '  <div id=\"selectFieldsPart\">' +\n      '    <div class=\"jsoneditor-jmespath-wizard-label\">' + translate('transformWizardSelectFields') + '</div>' +\n      '    <select class=\"jsoneditor-jmespath-select-fields\" id=\"selectFields\" multiple>' +\n      '    </select>' +\n      '  </div>' +\n      '  </div>' +\n      '  </td>' +\n      '</tr>' +\n      '<tr>' +\n      '  <th>' + translate('transformQueryLabel') + ' </th>' +\n      '  <td class=\"jsoneditor-modal-input\">' +\n      '    <textarea id=\"query\" ' +\n      '              rows=\"4\" ' +\n      '              autocomplete=\"off\" ' +\n      '              autocorrect=\"off\" ' +\n      '              autocapitalize=\"off\" ' +\n      '              spellcheck=\"false\"' +\n      '              title=\"' + translate('transformQueryTitle') + '\">[*]</textarea>' +\n      '  </td>' +\n      '</tr>' +\n      '<tr>' +\n      '  <th>' + translate('transformPreviewLabel') + ' </th>' +\n      '  <td class=\"jsoneditor-modal-input\">' +\n      '    <textarea id=\"preview\" ' +\n      '        class=\"jsoneditor-transform-preview\"' +\n      '        readonly> </textarea>' +\n      '  </td>' +\n      '</tr>' +\n      '<tr>' +\n      '<td colspan=\"2\" class=\"jsoneditor-modal-input jsoneditor-modal-actions\">' +\n      '  <input type=\"submit\" id=\"ok\" value=\"' + translate('ok') + '\" autofocus />' +\n      '</td>' +\n      '</tr>' +\n      '</tbody>' +\n      '</table>' +\n      '</div>';\n\n  picoModal({\n    parent: container,\n    content: content,\n    overlayClass: 'jsoneditor-modal-overlay',\n    modalClass: 'jsoneditor-modal jsoneditor-modal-transform',\n    focus: false\n  })\n      .afterCreate(function (modal) {\n        var elem = modal.modalElem();\n\n        var wizard = elem.querySelector('#wizard');\n        var ok = elem.querySelector('#ok');\n        var filterField = elem.querySelector('#filterField');\n        var filterRelation = elem.querySelector('#filterRelation');\n        var filterValue = elem.querySelector('#filterValue');\n        var sortField = elem.querySelector('#sortField');\n        var sortOrder = elem.querySelector('#sortOrder');\n        var selectFields = elem.querySelector('#selectFields');\n        var query = elem.querySelector('#query');\n        var preview = elem.querySelector('#preview');\n\n        if (!Array.isArray(value)) {\n          wizard.style.display = 'none';\n          wizard.parentNode.style.fontStyle = 'italic';\n          wizard.parentNode.appendChild(\n              document.createTextNode('(wizard not available for objects, only for arrays)')\n          );\n        }\n\n        var paths = node.getChildPaths();\n        paths.forEach(function (path) {\n          var formattedPath = preprocessPath(path);\n          var filterOption = document.createElement('option');\n          filterOption.text = formattedPath;\n          filterOption.value = formattedPath;\n          filterField.appendChild(filterOption);\n\n          var sortOption = document.createElement('option');\n          sortOption.text = formattedPath;\n          sortOption.value = formattedPath;\n          sortField.appendChild(sortOption);\n        });\n\n        var allPaths = node.getChildPaths(true).filter(function(path) {\n          return path !== '.';\n        });\n\n        if (allPaths.length > 0) {\n          allPaths.forEach(function (path) {\n            var formattedPath = preprocessPath(path);\n            var option = document.createElement('option');\n            option.text = formattedPath;\n            option.value = formattedPath;\n            selectFields.appendChild(option);\n          });\n        }\n        else {\n          elem.querySelector('#selectFieldsPart').style.display = 'none';\n        }\n\n        var selectrFilterField = new Selectr(filterField, { defaultSelected: false, clearable: true, allowDeselect: true, placeholder: 'field...' });\n        var selectrFilterRelation = new Selectr(filterRelation, { defaultSelected: false, clearable: true, allowDeselect: true, placeholder: 'compare...' });\n        var selectrSortField = new Selectr(sortField, { defaultSelected: false, clearable: true, allowDeselect: true, placeholder: 'field...' });\n        var selectrSortOrder = new Selectr(sortOrder, { defaultSelected: false, clearable: true, allowDeselect: true, placeholder: 'order...' });\n        var selectrSelectFields = new Selectr(selectFields, {multiple: true, clearable: true, defaultSelected: false});\n\n        selectrFilterField.on('selectr.change', generateQueryFromWizard);\n        selectrFilterRelation.on('selectr.change', generateQueryFromWizard);\n        filterValue.oninput = generateQueryFromWizard;\n        selectrSortField.on('selectr.change', generateQueryFromWizard);\n        selectrSortOrder.on('selectr.change', generateQueryFromWizard);\n        selectrSelectFields.on('selectr.change', generateQueryFromWizard);\n\n        elem.querySelector('.pico-modal-contents').onclick = function (event) {\n          // prevent the first clear button from getting focus when clicking anywhere in the modal\n          event.preventDefault();\n        };\n\n        query.value = Array.isArray(value) ? '[*]' : '@';\n\n        function preprocessPath(path) {\n          if (path[0] === '.') {\n            return (path === '.')\n                ? '@'\n                : path.slice(1);\n          }\n          else {\n            return path;\n          }\n        }\n\n        function generateQueryFromWizard () {\n          if (filterField.value && filterRelation.value && filterValue.value) {\n            var field1 = filterField.value;\n            // TODO: move _stringCast into a static util function\n            var value1 = JSON.stringify(node._stringCast(filterValue.value));\n            query.value = '[? ' +\n                field1 + ' ' +\n                filterRelation.value + ' ' +\n                '`' + value1 + '`' +\n                ']';\n          }\n          else {\n            query.value = '[*]';\n          }\n\n          if (sortField.value && sortOrder.value) {\n            var field2 = sortField.value;\n            if (sortOrder.value === 'desc') {\n              query.value += ' | reverse(sort_by(@, &' + field2 + '))';\n            }\n            else {\n              query.value += ' | sort_by(@, &' + field2 + ')';\n            }\n          }\n\n          if (selectFields.value) {\n            var values = [];\n            for (var i=0; i < selectFields.options.length; i++) {\n              if (selectFields.options[i].selected) {\n                var value = selectFields.options[i].value;\n                values.push(value);\n              }\n            }\n\n            if (query.value[query.value.length - 1] !== ']') {\n              query.value += ' | [*]';\n            }\n\n            if (values.length === 1) {\n              query.value += '.' + value;\n            }\n            else if (values.length > 1) {\n              query.value += '.{' +\n                  values.map(function (value) {\n                    var parts = value.split('.');\n                    var last = parts[parts.length - 1];\n                    return last + ': ' + value;\n                  }).join(', ') +\n                  '}';\n            }\n            else { // values.length === 0\n              // ignore\n            }\n          }\n\n          debouncedUpdatePreview();\n        }\n\n        function updatePreview() {\n          try {\n            var transformed = jmespath.search(value, query.value);\n            var lines =  JSON.stringify(transformed, null, 2).split('\\n');\n\n            if (lines.length > MAX_PREVIEW_LINES) {\n              lines = lines.slice(0, MAX_PREVIEW_LINES).concat(['...'])\n            }\n\n\n            preview.className = 'jsoneditor-transform-preview';\n            preview.value = lines.join('\\n');\n            ok.disabled = false;\n          }\n          catch (err) {\n            preview.className = 'jsoneditor-transform-preview jsoneditor-error';\n            preview.value = err.toString();\n            ok.disabled = true;\n          }\n        }\n\n        var debouncedUpdatePreview = debounce(updatePreview, 300);\n\n        query.oninput = debouncedUpdatePreview;\n        debouncedUpdatePreview();\n\n        ok.onclick = function (event) {\n          event.preventDefault();\n          event.stopPropagation();\n\n          modal.close();\n\n          node.transform(query.value)\n        };\n\n        setTimeout(function () {\n          query.select();\n          query.focus();\n          query.selectionStart = 3;\n          query.selectionEnd = 3;\n        });\n      })\n      .afterClose(function (modal) {\n        modal.destroy();\n      })\n      .show();\n}\n\nmodule.exports = showTransformModal;\n",null]}