{"remainingRequest":"A:\\Z Drive\\OnlineJSONeditor\\OnlineJSONeditor\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--8-1!A:\\Z Drive\\OnlineJSONeditor\\OnlineJSONeditor\\node_modules\\jsoneditor\\src\\js\\Highlighter.js","dependencies":[{"path":"A:\\Z Drive\\OnlineJSONeditor\\OnlineJSONeditor\\node_modules\\jsoneditor\\src\\js\\Highlighter.js","mtime":499162500000},{"path":"A:\\Z Drive\\OnlineJSONeditor\\OnlineJSONeditor\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1531646483117},{"path":"A:\\Z Drive\\OnlineJSONeditor\\OnlineJSONeditor\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1528256844000}],"contextDependencies":[],"result":["'use strict';\n\n/**\n * The highlighter can highlight/unhighlight a node, and\n * animate the visibility of a context menu.\n * @constructor Highlighter\n */\nfunction Highlighter () {\n  this.locked = false;\n}\n\n/**\n * Hightlight given node and its childs\n * @param {Node} node\n */\nHighlighter.prototype.highlight = function (node) {\n  if (this.locked) {\n    return;\n  }\n\n  if (this.node != node) {\n    // unhighlight current node\n    if (this.node) {\n      this.node.setHighlight(false);\n    }\n\n    // highlight new node\n    this.node = node;\n    this.node.setHighlight(true);\n  }\n\n  // cancel any current timeout\n  this._cancelUnhighlight();\n};\n\n/**\n * Unhighlight currently highlighted node.\n * Will be done after a delay\n */\nHighlighter.prototype.unhighlight = function () {\n  if (this.locked) {\n    return;\n  }\n\n  var me = this;\n  if (this.node) {\n    this._cancelUnhighlight();\n\n    // do the unhighlighting after a small delay, to prevent re-highlighting\n    // the same node when moving from the drag-icon to the contextmenu-icon\n    // or vice versa.\n    this.unhighlightTimer = setTimeout(function () {\n      me.node.setHighlight(false);\n      me.node = undefined;\n      me.unhighlightTimer = undefined;\n    }, 0);\n  }\n};\n\n/**\n * Cancel an unhighlight action (if before the timeout of the unhighlight action)\n * @private\n */\nHighlighter.prototype._cancelUnhighlight = function () {\n  if (this.unhighlightTimer) {\n    clearTimeout(this.unhighlightTimer);\n    this.unhighlightTimer = undefined;\n  }\n};\n\n/**\n * Lock highlighting or unhighlighting nodes.\n * methods highlight and unhighlight do not work while locked.\n */\nHighlighter.prototype.lock = function () {\n  this.locked = true;\n};\n\n/**\n * Unlock highlighting or unhighlighting nodes\n */\nHighlighter.prototype.unlock = function () {\n  this.locked = false;\n};\n\nmodule.exports = Highlighter;\n",null]}